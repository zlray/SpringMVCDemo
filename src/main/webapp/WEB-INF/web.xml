<!DOCTYPE web-app PUBLIC
    "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"
    "http://java.sun.com/dtd/web-app_2_3.dtd" >

<web-app>
    <display-name>Archetype Created Web Application</display-name>

    <context-param>
        <param-name>contextConfigLocation</param-name>
        <param-value>classpath:spring-mvc.xml</param-value>
    </context-param>


    <!--增加监听器 ContextLoaderListener是Spring的监听器，
    它的作用就是启动Web容器时，自动装配ApplicationContext的配置信息。
    因为它实现了ServletContextListener这个接口，在web.xml配置这个监听器，启动容器时，就会默认执行它实现的方法。
-->
    <listener>
        <listener-class>
            org.springframework.web.context.ContextLoaderListener
        </listener-class>
    </listener>


    <!--声明一个servlet配置-->
    <servlet>
        <servlet-name>SpringMvcDemo</servlet-name>
        <servlet-class>
            org.springframework.web.servlet.DispatcherServlet
        </servlet-class>
        <!-- 自定义servlet文件名、文件位置需要使用该参数配置 -->
        <init-param>
            <!-- 分发器拦截的上下文-contextConfigLocation|指定servlet context配置文件的位置 -->
            <param-name>contextConfigLocation</param-name>
            <param-value>classpath:spring-mvc.xml</param-value>
        </init-param>
        <load-on-startup>1</load-on-startup>
    </servlet>

    <!--配置servlet与处理请求的映射模式，会对所有*.jsp的后缀请求处理-->
    <servlet-mapping>
        <servlet-name>SpringMvcDemo</servlet-name>
        <url-pattern>/</url-pattern>
    </servlet-mapping>

    <welcome-file-list>
        <welcome-file>
            /index.jsp
        </welcome-file>
    </welcome-file-list>


</web-app>

